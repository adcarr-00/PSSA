name: PowerShell Script Analysis

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  psscriptanalyzer:
    runs-on: windows-latest  # Use a Windows runner to execute PowerShell

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install PSScriptAnalyzer
        shell: pwsh
        run: |
          Install-Module -Name PSScriptAnalyzer -Force -Scope CurrentUser

      - name: Copy Custom Rule for Vulnerable Ports
        shell: pwsh
        run: |
          # Copy the custom rule from the root of the repository
          New-Item -Path "$env:USERPROFILE\Documents\PowerShell\Modules\VulnerablePortsRule.psm1" -ItemType File -Force
          Set-Content -Path "$env:USERPROFILE\Documents\PowerShell\Modules\VulnerablePortsRule.psm1" -Value "$(cat VulnerablePortsRule.psm1)"

      - name: Run PSScriptAnalyzer
        shell: pwsh
        run: |
          # Run PSScriptAnalyzer on all .ps1 files with custom rules
          Import-Module PSScriptAnalyzer
          # Load the custom rule and check if it's available
          $customRulePath = "$env:USERPROFILE\Documents\PowerShell\Modules\VulnerablePortsRule.psm1"
          Import-Module $customRulePath
          Write-Host "Custom Rule Module Loaded: $customRulePath"

          # Analyze all .ps1 files recursively
          Get-ChildItem -Path . -Recurse -Filter *.ps1 | ForEach-Object {
            Write-Host "Analysing $($_.FullName)"
            try {
              # Run the script analyzer with the custom rule and capture the output
              $analysisResult = Invoke-ScriptAnalyzer -Path $_.FullName -CustomRule $customRulePath
              $analysisResult | Out-File -FilePath psscriptanalyzer-results.txt -Append
            } catch {
              Write-Error "Error analyzing $($_.FullName): $_"
            }
          }
        

      - name: Upload results as artifact
        uses: actions/upload-artifact@v3
        with:
          name: psscriptanalyzer-results
          path: psscriptanalyzer-results.txt
    
